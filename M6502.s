#ifdef __arm__

#include "M6502mac.h"

	.global m6502Init
	.global m6502Reset
	.global m6502SetResetPin
	.global m6502SetNMIPin
	.global m6502SetIRQPin
	.global m6502RestoreAndRunXCycles
	.global m6502RunXCyclesC
	.global m6502RunXCycles
	.global m6502CheckIrqs
	.global translate6502PCToOffset
	.global m6502SaveState
	.global m6502LoadState
	.global m6502GetStateSize
	.global m6502PatchOpcode
	.global m6502RestoreOpcode
	.global m6502OutOfCycles
	.global memRead8
	.global memWrite8

	.syntax unified
	.arm

#if defined(NDS) && !defined(NO_FASTMEM_6502)
	.section .itcm						;@ For the NDS ARM9
	#elif defined(GBA)
	#if !defined(NO_FASTMEM_6502)
	.section .iwram, "ax", %progbits	;@ For the GBA
	#else
	.section .ewram, "ax"				;@ For the GBA
	#endif
#else
	.section .text
#endif
	.align 2

#ifdef DEBUG
fetchDebug:
	bmi m6502OutOfCycles
	sub m6502pc,m6502pc,#1

	encodeP (0)
	and r0,r0,#0xFF
	loadLastBank r12
	sub r12,m6502pc,r12
	mov r12,r12
	b debugContinue
	.short 0x6464,0x0000
	.string "%r12% A:%r4% X:%r5% Y:%r6% SP:%r7% F:%r0%\n"
	.align 2
debugContinue:
	ldrb r0,[m6502pc],#1
	ldr pc,[m6502ptr,r0,lsl#2]
	.pool
#endif
;@----------------------------------------------------------------------------
_00:	;@ BRK				Soft IRQ
;@----------------------------------------------------------------------------
	sub m6502pc,m6502pc,#1
	reEncodePC
	ldrb r0,[m6502pc]
	cmp r0,#0					;@ Real BRK?
	beq doBRK
	b m6502Go
;@----------------------------------------------------------------------------
_01:	;@ ORA ($nn,X)
;@----------------------------------------------------------------------------
	readMemIIX
	opORA 6
;@----------------------------------------------------------------------------
#if !defined(W65C02) && !defined(W65C02_OLD)
_02:   ;@ KIL (JAM) [HLT] STP
_12:
_22:
_32:
_42:
_52:
_62:
_72:
_92:
_B2:
_D2:
_F2:
;@----------------------------------------------------------------------------
	opKIL
;@----------------------------------------------------------------------------
_03:	;@ SLO ($nn,X)			;ShiftLeft ORA
;@----------------------------------------------------------------------------
	doIIX
	opSLO 8
#endif

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_04:	;@ TSB $nn
;@----------------------------------------------------------------------------
	doZ
	opTSB 5
noBBranch:
	fetch 5
#endif

;@----------------------------------------------------------------------------
_05:	;@ ORA $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opORA 3
;@----------------------------------------------------------------------------
_06:	;@ ASL $nn
;@----------------------------------------------------------------------------
	doZ
	opASL 5

#if defined(W65C02)
;@----------------------------------------------------------------------------
_07:	;@ RMB0 $nn
;@----------------------------------------------------------------------------
	opRMB 0
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_07:	;@ SLO $nn
;@----------------------------------------------------------------------------
	doZ
	opSLO 5
#endif
;@----------------------------------------------------------------------------
_08:	;@ PHP
;@----------------------------------------------------------------------------
	encodeP (R+B)
	push8 r0
	fetch 3
;@----------------------------------------------------------------------------
_09:	;@ ORA #$nn
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opORA 2
;@----------------------------------------------------------------------------
_0A:	;@ ASL
;@----------------------------------------------------------------------------
	adds m6502a,m6502a,m6502a
	orr cycles,cycles,#CYC_C	;@ Prepare C
	getNextOpcode
	mov m6502nz,m6502a,asr#24	;@ NZ
	executeOpCode_c 2			;@ Also subs carry

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_0C:	;@ TSB $nnnn
;@----------------------------------------------------------------------------
	doABS
	opTSB 6
#endif

;@----------------------------------------------------------------------------
_0D:	;@ ORA $nnnn
;@----------------------------------------------------------------------------
	readMemABS
	opORA 4
;@----------------------------------------------------------------------------
_0E:	;@ ASL $nnnn
;@----------------------------------------------------------------------------
	doABS
	opASL 6

#if defined(W65C02)
;@----------------------------------------------------------------------------
_0F:	;@ BBR0 $nn,*
;@----------------------------------------------------------------------------
	opBBR 0
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_0F:	;@ SLO $nnnn
;@----------------------------------------------------------------------------
	doABS
	opSLO 6
#endif
;@----------------------------------------------------------------------------
_10:	;@ BPL *
;@----------------------------------------------------------------------------
	opBPL
;@----------------------------------------------------------------------------
_11:	;@ ORA ($nn),Y
;@----------------------------------------------------------------------------
	readMemIIY
	opORA 5
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_12:	;@ ORA ($nn)
;@----------------------------------------------------------------------------
	readMemZInd
	opORA 5
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_13:	;@ SLO ($nn),Y
;@----------------------------------------------------------------------------
	doIIY_W
	opSLO 8
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_14:	;@ TRB $nn
;@----------------------------------------------------------------------------
	doZ
	opTRB 5
#endif
;@----------------------------------------------------------------------------
_15:	;@ ORA $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	readMem
	opORA 4
;@----------------------------------------------------------------------------
_16:	;@ ASL $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opASL 6
#if defined(W65C02)
;@----------------------------------------------------------------------------
_17:	;@ RMB1 $nn
;@----------------------------------------------------------------------------
	opRMB 1
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_17:	;@ SLO $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opSLO 6
#endif
;@----------------------------------------------------------------------------
_18:	;@ CLC
;@----------------------------------------------------------------------------
	getNextOpcode
	bic cycles,cycles,#CYC_C
	executeOpcode 2
;@----------------------------------------------------------------------------
_19:	;@ ORA $nnnn,Y
;@----------------------------------------------------------------------------
	readMemAIY
	opORA 4
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_1A:	;@ INA
;@----------------------------------------------------------------------------
	add m6502a,m6502a,#0x01000000
	getNextOpcode
	mov m6502nz,m6502a,asr#24		;@ NZ
	executeOpcode 2
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_1B:	;@ SLO $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY_W
	opSLO 7
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_1C:	;@ TRB $nnnn
;@----------------------------------------------------------------------------
	doABS
	opTRB 6
#endif
;@----------------------------------------------------------------------------
_1D:	;@ ORA $nnnn,X
;@----------------------------------------------------------------------------
	readMemAIX
	opORA 4
;@----------------------------------------------------------------------------
_1E:	;@ ASL $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opASL 7
#if defined(W65C02)
;@----------------------------------------------------------------------------
_1F:	;@ BBR1 $nn,*
;@----------------------------------------------------------------------------
	opBBR 1
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_1F:	;@ SLO $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opSLO 7
#endif
;@----------------------------------------------------------------------------
_20:	;@ JSR $nnnn
;@----------------------------------------------------------------------------
	loadLastBank r0
	ldrb r1,[m6502pc],#1
	ldrb r2,[m6502pc]
	sub r0,m6502pc,r0
	orr m6502pc,r1,r2,lsl#8
	push16
	encodePC
	fetch 6
;@----------------------------------------------------------------------------
_21:	;@ AND ($nn,X)
;@----------------------------------------------------------------------------
	readMemIIX
	opAND 6
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_23:	;@ RLA ($nn,X)
;@----------------------------------------------------------------------------
	doIIX
	opRLA 8
#endif
;@----------------------------------------------------------------------------
_24:	;@ BIT $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opBIT 3
;@----------------------------------------------------------------------------
_25:	;@ AND $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opAND 3
;@----------------------------------------------------------------------------
_26:	;@ ROL $nn
;@----------------------------------------------------------------------------
	doZ
	opROL 5
#if defined(W65C02)
;@----------------------------------------------------------------------------
_27:	;@ RMB2 $nn
;@----------------------------------------------------------------------------
	opRMB 2
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_27:	;@ RLA $nn
;@----------------------------------------------------------------------------
	doZ
	opRLA 5
#endif
;@----------------------------------------------------------------------------
_28:	;@ PLP
;@----------------------------------------------------------------------------
	pop8 r0
	eor r2,cycles,r0
	and r2,r2,cycles
	decodePF
	eatCycles 4

	tst r2,#CYC_I
	bne m6502DelayIrqCheck
	fetch 0
;@----------------------------------------------------------------------------
_29:	;@ AND #$nn
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opAND 2
;@----------------------------------------------------------------------------
_2A:	;@ ROL
;@----------------------------------------------------------------------------
	movs cycles,cycles,lsr#1	;@ Get C
	orrcs m6502a,m6502a,#0x00800000
	adds m6502a,m6502a,m6502a
	adc cycles,cycles,cycles	;@ Set C
	getNextOpcode
	mov m6502nz,m6502a,asr#24	;@ NZ
	executeOpcode 2
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_0B:	;@ ANC #$nn
_2B:	;@ ANC #$nn
;@----------------------------------------------------------------------------
	readMemIMM
	bic cycles,cycles,#CYC_C
	and m6502a,m6502a,r0,lsl#24
	movs m6502nz,m6502a,asr#24	;@NZ
	orrmi cycles,cycles,#CYC_C
	fetch 2
#endif
;@----------------------------------------------------------------------------
_2C:	;@ BIT $nnnn
;@----------------------------------------------------------------------------
	readMemABS
	opBIT 4
;@----------------------------------------------------------------------------
_2D:	;@ AND $nnnn
;@----------------------------------------------------------------------------
	readMemABS
	opAND 4
;@----------------------------------------------------------------------------
_2E:	;@ ROL $nnnn
;@----------------------------------------------------------------------------
	doABS
	opROL 6
#if defined(W65C02)
;@----------------------------------------------------------------------------
_2F:	;@ BBR2 $nn,*
;@----------------------------------------------------------------------------
	opBBR 2
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_2F:	;@ RLA $nnnn
;@----------------------------------------------------------------------------
	doABS
	opRLA 6
#endif
;@----------------------------------------------------------------------------
_30:	;@ BMI
;@----------------------------------------------------------------------------
	opBMI
;@----------------------------------------------------------------------------
_31:	;@ AND ($nn),Y
;@----------------------------------------------------------------------------
	readMemIIY
	opAND 5

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_32:	;@ AND ($nn)
;@----------------------------------------------------------------------------
	readMemZInd
	opAND 5
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_33:	;@ RLA ($nn),Y
;@----------------------------------------------------------------------------
	doIIY_W
	opRLA 8
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_34:	;@ BIT $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	readMem
	opBIT 4
#endif
;@----------------------------------------------------------------------------
_35:	;@ AND $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	readMem
	opAND 4
;@----------------------------------------------------------------------------
_36:	;@ ROL $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opROL 6

#if defined(W65C02)
;@----------------------------------------------------------------------------
_37:	;@ RMB3 $nn
;@----------------------------------------------------------------------------
	opRMB 3
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_37:	;@ RLA $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opRLA 6
#endif
;@----------------------------------------------------------------------------
_38:	;@ SEC
;@----------------------------------------------------------------------------
	getNextOpcode
	orr cycles,cycles,#CYC_C
	executeOpcode 2
;@----------------------------------------------------------------------------
_39:	;@ AND $nnnn,Y
;@----------------------------------------------------------------------------
	readMemAIY
	opAND 4

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_3A:	;@ DEA
;@----------------------------------------------------------------------------
	sub m6502a,m6502a,#0x01000000
	mov m6502nz,m6502a,asr#24		;@ NZ
	fetch 2
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_3B:	;@ RLA $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY_W
	opRLA 7
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_3C:	;@ BIT $nnnn,X
;@----------------------------------------------------------------------------
	readMemAIX
	opBIT 4
#endif
;@----------------------------------------------------------------------------
_3D:	;@ AND $nnnn,X
;@----------------------------------------------------------------------------
	readMemAIX
	opAND 4
;@----------------------------------------------------------------------------
_3E:	;@ ROL $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opROL 7
#if defined(W65C02)
;@----------------------------------------------------------------------------
_3F:	;@ BBR3 $nn,*
;@----------------------------------------------------------------------------
	opBBR 3
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_3F:	;@ RLA $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opRLA 7
#endif
;@----------------------------------------------------------------------------
_40:	;@ RTI
;@----------------------------------------------------------------------------
	pop8 r0						;@ Pop m6502 flags and decode
	decodePF
	pop16						;@ Pop the return address
	encodePC
	eatCycles 6
	b m6502CheckIrqs			;@ RTI checks for interrupt immediately
;@----------------------------------------------------------------------------
_41:	;@ EOR ($nn,X)
;@----------------------------------------------------------------------------
	readMemIIX
	opEOR 6
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_43:	;@ SRE ($nn,X)
;@----------------------------------------------------------------------------
	doIIX
	opSRE 8
#endif
;@----------------------------------------------------------------------------
_45:	;@ EOR $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opEOR 3
;@----------------------------------------------------------------------------
_46:	;@ LSR $nn
;@----------------------------------------------------------------------------
	doZ
	opLSR 5

#if defined(W65C02)
;@----------------------------------------------------------------------------
_47:	;@ RMB4 $nn
;@----------------------------------------------------------------------------
	opRMB 4
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_47:	;@ SRE $nn
;@----------------------------------------------------------------------------
	doZ
	opSRE 5
#endif
;@----------------------------------------------------------------------------
_48:	;@ PHA
;@----------------------------------------------------------------------------
	mov r0,m6502a,lsr#24
	push8 r0
	fetch 3
;@----------------------------------------------------------------------------
_49:	;@ EOR #$nn
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opEOR 2
;@----------------------------------------------------------------------------
_4A:	;@ LSR
;@----------------------------------------------------------------------------
	movs m6502nz,m6502a,lsr#25		;@ Z, N never set.
	orr cycles,cycles,#CYC_C		;@ Prepare C
	getNextOpcode
	mov m6502a,m6502nz,lsl#24		;@ Result without garbage
	executeOpcode_c 2
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_4B:	;@ ALR #$nn
;@----------------------------------------------------------------------------
	ldrb r0,[m6502pc],#1
	and m6502a,m6502a,r0,lsl#24
	movs m6502nz,m6502a,lsr#25		;@ Z, N never set.
	orr cycles,cycles,#CYC_C		;@ Prepare C
	getNextOpcode
	mov m6502a,m6502nz,lsl#24		;@ Result without garbage
	executeOpcode_c 2
#endif
;@----------------------------------------------------------------------------
_4C:	;@ JMP $nnnn
;@----------------------------------------------------------------------------
	ldrb r0,[m6502pc]
	ldrb m6502pc,[m6502pc,#1]
	add r2,m6502ptr,#m6502MemTbl
	and r1,m6502pc,#0xE0
	ldr r1,[r2,r1,lsr#3]		;@ In: m6502pc.
	orr m6502pc,r0,m6502pc,lsl#8
	add m6502pc,m6502pc,r1
	getNextOpcode
	storeLastBank r1
	executeOpcode 3
;@----------------------------------------------------------------------------
_4D:	;@ EOR $nnnn
;@----------------------------------------------------------------------------
	readMemABS
	opEOR 4
;@----------------------------------------------------------------------------
_4E:	;@ LSR $nnnn
;@----------------------------------------------------------------------------
	doABS
	opLSR 6
#if defined(W65C02)
;@----------------------------------------------------------------------------
_4F:	;@ BBR4 $nn,*
;@----------------------------------------------------------------------------
	opBBR 4
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_4F:	;@ SRE $nnnn
;@----------------------------------------------------------------------------
	doABS
	opSRE 6
#endif
;@----------------------------------------------------------------------------
_50:	;@ BVC *
;@----------------------------------------------------------------------------
	opBVC
;@----------------------------------------------------------------------------
_51:	;@ EOR ($nn),Y
;@----------------------------------------------------------------------------
	readMemIIY
	opEOR 5

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_52:	;@ EOR ($nn)
;@----------------------------------------------------------------------------
	readMemZInd
	opEOR 5
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_53:	;@ SRE ($nn),Y
;@----------------------------------------------------------------------------
	doIIY_W
	opSRE 8
#endif
;@----------------------------------------------------------------------------
_55:	;@ EOR $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	readMem
	opEOR 4
;@----------------------------------------------------------------------------
_56:	;@ LSR $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opLSR 6

#if defined(W65C02)
;@----------------------------------------------------------------------------
_57:	;@ RMB5 $nn
;@----------------------------------------------------------------------------
	opRMB 5
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_57:	;@ SRE $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opSRE 6
#endif
;@----------------------------------------------------------------------------
_58:	;@ CLI
;@----------------------------------------------------------------------------
	eatCycles 2
	tst cycles,#CYC_I
//	beq m6502CheckIrqs
	bic cycles,cycles,#CYC_I
	bne m6502DelayIrqCheck
	fetch 0
	.pool
;@----------------------------------------------------------------------------
_59:	;@ EOR $nnnn,Y
;@----------------------------------------------------------------------------
	readMemAIY
	opEOR 4

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_5A:	;@ PHY
;@----------------------------------------------------------------------------
	mov r0,m6502y,lsr#24
	push8 r0
	fetch 3
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_5B:	;@ SRE $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY_W
	opSRE 7
#endif
;@----------------------------------------------------------------------------
_5D:	;@ EOR $nnnn,X
;@----------------------------------------------------------------------------
	readMemAIX
	opEOR 4
;@----------------------------------------------------------------------------
_5E:	;@ LSR $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opLSR 7
#if defined(W65C02)
;@----------------------------------------------------------------------------
_5F:	;@ BBR5 $nn,*
;@----------------------------------------------------------------------------
	opBBR 5
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_5F:	;@ SRE $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opSRE 7
#endif
;@----------------------------------------------------------------------------
_60:	;@ RTS
;@----------------------------------------------------------------------------
	pop16
	add m6502pc,m6502pc,#1
	encodePC
	fetch 6
;@----------------------------------------------------------------------------
_61:	;@ ADC ($nn,X)
;@----------------------------------------------------------------------------
	readMemIIX
	opADC 6
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_63:	;@ RRA ($nn,X)
;@----------------------------------------------------------------------------
	doIIX
	opRRA 8
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_64:	;@ STZ $nn
;@----------------------------------------------------------------------------
	doZ
	opSTZ 3
#endif
;@----------------------------------------------------------------------------
_65:	;@ ADC $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opADC 3
;@----------------------------------------------------------------------------
_66:	;@ ROR $nn
;@----------------------------------------------------------------------------
	doZ
	opROR 5
#if defined(W65C02)
;@----------------------------------------------------------------------------
_67:	;@ RMB6 $nn
;@----------------------------------------------------------------------------
	opRMB 6
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_67:	;@ RRA $nn
;@----------------------------------------------------------------------------
	doZ
	opRRA 5
#endif
;@----------------------------------------------------------------------------
_68:	;@ PLA
;@----------------------------------------------------------------------------
	pop8 m6502nz
	getNextOpcode
	mov m6502a,m6502nz,lsl#24
	executeOpcode 4
;@----------------------------------------------------------------------------
_69:	;@ ADC #$nn
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opADC 2
;@----------------------------------------------------------------------------
_6A:	;@ ROR
;@----------------------------------------------------------------------------
	movs cycles,cycles,lsr#1	;@ Get C
	mov m6502a,m6502a,rrx
	movs m6502nz,m6502a,asr#24	;@ NZ
	and m6502a,m6502a,#0xff000000
	getNextOpcode
	adc cycles,cycles,cycles	;@ Set C
	executeOpcode 2
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_6B:	;@ ARR #$nn
;@----------------------------------------------------------------------------
	doIMM
	opARR 2
;@----------------------------------------------------------------------------
_6C:	;@ JMP ($nnnn)
;@----------------------------------------------------------------------------
	readMemABS
	mov m6502pc,r0
	mov addy,addy,ror#8
	add addy,addy,#0x01000000	;@ Only update low byte
	mov addy,addy,ror#24
	readMem8
	orr m6502pc,m6502pc,r0,lsl#8
	encodePC
	fetch 5
#else		// 65C02
;@----------------------------------------------------------------------------
_6C:	;@ JMP ($nnnn)
;@----------------------------------------------------------------------------
	readMemABS
	mov m6502pc,r0
	mov addy,addy,lsl#16
	add addy,addy,#0x00010000	;@ Update whole adress
	mov addy,addy,lsr#16
	readMem8
	orr m6502pc,m6502pc,r0,lsl#8
	encodePC
	fetch 6
#endif
;@----------------------------------------------------------------------------
_6D:	;@ ADC $nnnn
;@----------------------------------------------------------------------------
	readMemABS
	opADC 4
;@----------------------------------------------------------------------------
_6E:	;@ ROR $nnnn
;@----------------------------------------------------------------------------
	doABS
	opROR 6
#if defined(W65C02)
;@----------------------------------------------------------------------------
_6F:	;@ BBR6 $nn,*
;@----------------------------------------------------------------------------
	opBBR 6
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_6F:	;@ RRA $nnnn
;@----------------------------------------------------------------------------
	doABS
	opRRA 6
#endif
;@----------------------------------------------------------------------------
_70:	;@ BVS *
;@----------------------------------------------------------------------------
	opBVS
;@----------------------------------------------------------------------------
_71:	;@ ADC ($nn),Y
;@----------------------------------------------------------------------------
	readMemIIY
	opADC 5

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_72:	;@ ADC ($nn)
;@----------------------------------------------------------------------------
	readMemZInd
	opADC 5
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_73:	;@ RRA ($nn),Y
;@----------------------------------------------------------------------------
	doIIY_W
	opRRA 8
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_74:	;@ STZ $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opSTZ 4
#endif

;@----------------------------------------------------------------------------
_75:	;@ ADC $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	readMem
	opADC 4
;@----------------------------------------------------------------------------
_76:	;@ ROR $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opROR 6

#if defined(W65C02)
;@----------------------------------------------------------------------------
_77:	;@ RMB7 $nn
;@----------------------------------------------------------------------------
	opRMB 7
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_77:	;@ RRA $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opRRA 6
#endif
;@----------------------------------------------------------------------------
_78:	;@ SEI
;@----------------------------------------------------------------------------
	getNextOpcode
	orr cycles,cycles,#CYC_I
	executeOpcode 2
;@----------------------------------------------------------------------------
_79:	;@ ADC $nnnn,Y
;@----------------------------------------------------------------------------
	readMemAIY
	opADC 4

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_7A:	;@ PLY
;@----------------------------------------------------------------------------
	pop8 m6502nz
	mov m6502y,m6502nz,lsl#24
	fetch 4
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_7B:	;@ RRA $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY_W
	opRRA 7
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_7C:	;@ JMP ($nnnn,X)
;@----------------------------------------------------------------------------
	doAIX
	add r1,m6502ptr,m6502MemTbl
	and r2,addy,#0xE000
	ldr r1,[r1,r2,lsr#11]
	ldrb m6502pc,[r1,addy]!
	ldrb r0,[r1,#1]
	orr m6502pc,m6502pc,r0,lsl#8
	encodePC
	fetch 6
#endif

;@----------------------------------------------------------------------------
_7D:	;@ ADC $nnnn,X
;@----------------------------------------------------------------------------
	readMemAIX
	opADC 4
;@----------------------------------------------------------------------------
_7E:	;@ ROR $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opROR 7
#if defined(W65C02)
;@----------------------------------------------------------------------------
_7F:	;@ BBR7 $nn,*
;@----------------------------------------------------------------------------
	opBBR 7
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_7F:	;@ RRA $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opRRA 7
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_80:	;@ BRA branch always
;@----------------------------------------------------------------------------
	ldrsb r0,[m6502pc],#1
	add m6502pc,m6502pc,r0
	fetch 3							;@ +1 if pageboundary crossed.
#endif

;@----------------------------------------------------------------------------
_81:	;@ STA ($nn,X)
;@----------------------------------------------------------------------------
	doIIX
	opSTORE m6502a 6
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_83:	;@ SAX ($nn,X)
;@----------------------------------------------------------------------------
	doIIX
	opSAX 6
#endif
;@----------------------------------------------------------------------------
_84:	;@ STY $nn
;@----------------------------------------------------------------------------
	doZ
	opSTORE m6502y 3
;@----------------------------------------------------------------------------
_85:	;@ STA $nn
;@----------------------------------------------------------------------------
	doZ
	opSTORE m6502a 3
;@----------------------------------------------------------------------------
_86:	;@ STX $nn
;@----------------------------------------------------------------------------
	doZ
	opSTORE m6502x 3

#if defined(W65C02)
;@----------------------------------------------------------------------------
_87:	;@ SMB0 $nn
;@----------------------------------------------------------------------------
	opSMB 0
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_87:	;@ SAX $nn
;@----------------------------------------------------------------------------
	doZ
	opSAX 3
#endif
;@----------------------------------------------------------------------------
_88:	;@ DEY
;@----------------------------------------------------------------------------
	sub m6502y,m6502y,#0x01000000
	getNextOpcode
	mov m6502nz,m6502y,asr#24
	executeOpcode 2

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_89:	;@ BIT #$nn
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opBIT 2
#endif

;@----------------------------------------------------------------------------
_8A:	;@ TXA
;@----------------------------------------------------------------------------
	mov m6502a,m6502x
	getNextOpcode
	mov m6502nz,m6502x,asr#24
	executeOpcode 2
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_8B:	;@ ANE #$nn
;@----------------------------------------------------------------------------
	readMemIMM
	orr m6502a,m6502a,#0xEE000000
	and m6502a,m6502a,m6502x
	and m6502a,m6502a,r0,lsl#24
	getNextOpcode
	mov m6502nz,m6502a,asr#24
	executeOpcode 2
#endif
;@----------------------------------------------------------------------------
_8C:	;@ STY $nnnn
;@----------------------------------------------------------------------------
	doABS
	opSTORE m6502y 4
;@----------------------------------------------------------------------------
_8D:	;@ STA $nnnn
;@----------------------------------------------------------------------------
	doABS
	opSTORE m6502a 4
;@----------------------------------------------------------------------------
_8E:	;@ STX $nnnn
;@----------------------------------------------------------------------------
	doABS
	opSTORE m6502x 4
#if defined(W65C02)
;@----------------------------------------------------------------------------
_8F:	;@ BBS0 $nn,*
;@----------------------------------------------------------------------------
	opBBS 0
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_8F:	;@ SAX $nnnn
;@----------------------------------------------------------------------------
	doABS
	opSAX 4
#endif
;@----------------------------------------------------------------------------
_90:	;@ BCC *
;@----------------------------------------------------------------------------
	opBCC
;@----------------------------------------------------------------------------
_91:	;@ STA ($nn),Y
;@----------------------------------------------------------------------------
	doIIY_W
	opSTORE m6502a 6

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_92:	;@ STA ($nn)
;@----------------------------------------------------------------------------
	doZPI
	opSTORE m6502a 5
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_93:	;@ SHA ($nn),Y
;@----------------------------------------------------------------------------
	opSHA_IND_Y 6
#endif
;@----------------------------------------------------------------------------
_94:	;@ STY $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opSTORE m6502y 4
;@----------------------------------------------------------------------------
_95:	;@ STA $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opSTORE m6502a 4
;@----------------------------------------------------------------------------
_96:	;@ STX $nn,Y
;@----------------------------------------------------------------------------
	doZIYf
	opSTORE m6502x 4

#if defined(W65C02)
;@----------------------------------------------------------------------------
_97:	;@ SMB1 $nn
;@----------------------------------------------------------------------------
	opSMB 1
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_97:	;@ SAX $nn,Y
;@----------------------------------------------------------------------------
	doZIYf
	opSAX 4
#endif
;@----------------------------------------------------------------------------
_98:	;@ TYA
;@----------------------------------------------------------------------------
	mov m6502a,m6502y
	getNextOpcode
	mov m6502nz,m6502y,asr#24
	executeOpcode 2
;@----------------------------------------------------------------------------
_99:	;@ STA $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY_W
	opSTORE m6502a 5
;@----------------------------------------------------------------------------
_9A:	;@ TXS
;@----------------------------------------------------------------------------
	getNextOpcode
	orr m6502sp,m6502x,#0x00000001
	executeOpcode 2
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_9B:	;@ SHS $nnnn,Y
;@----------------------------------------------------------------------------
	opSHS_ABS_Y 5
#endif
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_9C:	;@ STZ $nnnn
;@----------------------------------------------------------------------------
	doABS
	opSTZ 4
#else
;@----------------------------------------------------------------------------
_9C:	;@ SHY $nnnn,X
;@----------------------------------------------------------------------------
	opSHY_ABS_X 5
#endif
;@----------------------------------------------------------------------------
_9D:	;@ STA $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opSTORE m6502a 5

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_9E:	;@ STZ $nnnn,X
;@----------------------------------------------------------------------------
	doAIX
	opSTZ 5
#else
;@----------------------------------------------------------------------------
_9E:	;@	SHX $nnnn,Y
;@----------------------------------------------------------------------------
	opSHX_ABS_Y 5
#endif

#if defined(W65C02)
;@----------------------------------------------------------------------------
_9F:	;@ BBS1 $nn,*
;@----------------------------------------------------------------------------
	opBBS 1
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_9F:	;@ SHA $nnnn,Y
;@----------------------------------------------------------------------------
	opSHA_ABS_Y 5
#endif
;@----------------------------------------------------------------------------
_A0:	;@ LDY #$nn
;@----------------------------------------------------------------------------
	doIMM
	opLOAD m6502y 2
;@----------------------------------------------------------------------------
_A1:	;@ LDA ($nn,X)
;@----------------------------------------------------------------------------
	doIIX
	opLOAD m6502a 6
;@----------------------------------------------------------------------------
_A2:	;@ LDX #$nn
;@----------------------------------------------------------------------------
	doIMM
	opLOAD m6502x 2
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_A3:	;@ LAX ($nn,X)
;@----------------------------------------------------------------------------
	doIIX
	opLAX 6
#endif
;@----------------------------------------------------------------------------
_A4:	;@ LDY $nn
;@----------------------------------------------------------------------------
	doZ
	opLOAD m6502y 3
;@----------------------------------------------------------------------------
_A5:	;@ LDA $nn
;@----------------------------------------------------------------------------
	doZ
	opLOAD m6502a 3
;@----------------------------------------------------------------------------
_A6:	;@ LDX $nn
;@----------------------------------------------------------------------------
	doZ
	opLOAD m6502x 3

#if defined(W65C02)
;@----------------------------------------------------------------------------
_A7:	;@ SMB2 $nn
;@----------------------------------------------------------------------------
	opSMB 2
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_A7:	;@ LAX $nn
;@----------------------------------------------------------------------------
	doZ
	opLAX 3
#endif
;@----------------------------------------------------------------------------
_A8:	;@ TAY
;@----------------------------------------------------------------------------
	mov m6502y,m6502a
	getNextOpcode
	mov m6502nz,m6502a,asr#24
	executeOpcode 2
;@----------------------------------------------------------------------------
_A9:	;@ LDA #$nn
;@----------------------------------------------------------------------------
	doIMM
	opLOAD m6502a 2
;@----------------------------------------------------------------------------
_AA:	;@ TAX
;@----------------------------------------------------------------------------
	mov m6502x,m6502a
	getNextOpcode
	mov m6502nz,m6502a,asr#24
	executeOpcode 2
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_AB:	;@ LXA #$nn
;@----------------------------------------------------------------------------
	doIMM
	opLXA 2
#endif
;@----------------------------------------------------------------------------
_AC:	;@ LDY $nnnn
;@----------------------------------------------------------------------------
	doABS
	opLOAD m6502y 4
;@----------------------------------------------------------------------------
_AD:	;@ LDA $nnnn
;@----------------------------------------------------------------------------
	doABS
	opLOAD m6502a 4
;@----------------------------------------------------------------------------
_AE:	;@ LDX $nnnn
;@----------------------------------------------------------------------------
	doABS
	opLOAD m6502x 4
#if defined(W65C02)
;@----------------------------------------------------------------------------
_AF:	;@ BBS2 $nn,*
;@----------------------------------------------------------------------------
	opBBS 2
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_AF:	;@ LAX $nnnn
;@----------------------------------------------------------------------------
	doABS
	opLAX 4
#endif
;@----------------------------------------------------------------------------
_B0:	;@ BCS *
;@----------------------------------------------------------------------------
	opBCS
;@----------------------------------------------------------------------------
_B1:	;@ LDA ($nn),Y
;@----------------------------------------------------------------------------
	doIIY
	opLOAD m6502a 5

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_B2:	;@ LDA ($nn)
;@----------------------------------------------------------------------------
	doZPI
	opLOAD m6502a 5
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_B3:	;@ LAX ($nn),Y
;@----------------------------------------------------------------------------
	doIIY
	opLAX 5
#endif
;@----------------------------------------------------------------------------
_B4:	;@ LDY $nn,X
;@----------------------------------------------------------------------------
	doZIX
	opLOAD m6502y 4
;@----------------------------------------------------------------------------
_B5:	;@ LDA $nn,X
;@----------------------------------------------------------------------------
	doZIX
	opLOAD m6502a 4
;@----------------------------------------------------------------------------
_B6:	;@ LDX $nn,Y
;@----------------------------------------------------------------------------
	doZIY
	opLOAD m6502x 4

#if defined(W65C02)
;@----------------------------------------------------------------------------
_B7:	;@ SMB3 $nn
;@----------------------------------------------------------------------------
	opSMB 3
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_B7:	;@ LAX $nn,Y
;@----------------------------------------------------------------------------
	doZIY
	opLAX 4
#endif
;@----------------------------------------------------------------------------
_B8:	;@ CLV
;@----------------------------------------------------------------------------
	getNextOpcode
	bic cycles,cycles,#CYC_V
	executeOpcode 2
;@----------------------------------------------------------------------------
_B9:	;@ LDA $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY
	opLOAD m6502a 4
;@----------------------------------------------------------------------------
_BA:	;@ TSX
;@----------------------------------------------------------------------------
	and m6502x,m6502sp,#0xFF000000
	getNextOpcode
	mov m6502nz,m6502sp,asr#24
	executeOpcode 2
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_BB:	;@ LAS $nnnn,Y
;@----------------------------------------------------------------------------
	readMemAIY
	opLAS 4
#endif
;@----------------------------------------------------------------------------
_BC:	;@ LDY $nnnn,X
;@----------------------------------------------------------------------------
	doAIX
	opLOAD m6502y 4
;@----------------------------------------------------------------------------
_BD:	;@ LDA $nnnn,X
;@----------------------------------------------------------------------------
	doAIX
	opLOAD m6502a 4
;@----------------------------------------------------------------------------
_BE:	;@ LDX $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY
	opLOAD m6502x 4
#if defined(W65C02)
;@----------------------------------------------------------------------------
_BF:	;@ BBS3 $nn,*
;@----------------------------------------------------------------------------
	opBBS 3
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_BF:	;@ LAX $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY
	opLAX 4
#endif
;@----------------------------------------------------------------------------
_C0:	;@ CPY #$nn
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opCOMP m6502y 2
;@----------------------------------------------------------------------------
_C1:	;@ CMP ($nn,X)
;@----------------------------------------------------------------------------
	readMemIIX
	opCOMP m6502a 6
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_C3:	;@ DCP ($nn,X)
;@----------------------------------------------------------------------------
	doIIX
	opDCP 8
#endif
;@----------------------------------------------------------------------------
_C4:	;@ CPY $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opCOMP m6502y 3
;@----------------------------------------------------------------------------
_C5:	;@ CMP $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opCOMP m6502a 3
;@----------------------------------------------------------------------------
_C6:	;@ DEC $nn
;@----------------------------------------------------------------------------
	doZ
	opDEC 5

#if defined(W65C02)
;@----------------------------------------------------------------------------
_C7:	;@ SMB4 $nn
;@----------------------------------------------------------------------------
	opSMB 4
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_C7:	;@ DCP $nn
;@----------------------------------------------------------------------------
	doZ
	opDCP 5
#endif
;@----------------------------------------------------------------------------
_C8:	;@ INY
;@----------------------------------------------------------------------------
	add m6502y,m6502y,#0x01000000
	getNextOpcode
	mov m6502nz,m6502y,asr#24
	executeOpcode 2
;@----------------------------------------------------------------------------
_C9:	;@ CMP #$nn
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opCOMP m6502a 2
;@----------------------------------------------------------------------------
_CA:	;@ DEX
;@----------------------------------------------------------------------------
	sub m6502x,m6502x,#0x01000000
	getNextOpcode
	mov m6502nz,m6502x,asr#24
	executeOpcode 2

#if defined(W65C02)
;@----------------------------------------------------------------------------
_CB:	;@ WAI
;@----------------------------------------------------------------------------
	fetch 3
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_CB:	;@ SBX #$nn
;@----------------------------------------------------------------------------
	doIMM
	opSBX 2
#endif

;@----------------------------------------------------------------------------
_CC:	;@ CPY $nnnn
;@----------------------------------------------------------------------------
	readMemABS
	opCOMP m6502y 4
;@----------------------------------------------------------------------------
_CD:	;@ CMP $nnnn
;@----------------------------------------------------------------------------
	readMemABS
	opCOMP m6502a 4
;@----------------------------------------------------------------------------
_CE:	;@ DEC $nnnn
;@----------------------------------------------------------------------------
	doABS
	opDEC 6
#if defined(W65C02)
;@----------------------------------------------------------------------------
_CF:	;@ BBS4 $nn,*
;@----------------------------------------------------------------------------
	opBBS 4
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_CF:	;@ DCP $nnnn
;@----------------------------------------------------------------------------
	doABS
	opDCP 6
#endif
;@----------------------------------------------------------------------------
_D0:	;@ BNE *
;@----------------------------------------------------------------------------
	opBNE
;@----------------------------------------------------------------------------
_D1:	;@ CMP ($nn),Y
;@----------------------------------------------------------------------------
	readMemIIY
	opCOMP m6502a 5

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_D2:	;@ CMP ($nn)
;@----------------------------------------------------------------------------
	readMemZInd
	opCOMP m6502a 5
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_D3:	;@ DCP ($nn),Y
;@----------------------------------------------------------------------------
	doIIY_W
	opDCP 8
#endif
;@----------------------------------------------------------------------------
_D5:	;@ CMP $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	readMem
	opCOMP m6502a 4
;@----------------------------------------------------------------------------
_D6:	;@ DEC $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opDEC 6

#if defined(W65C02)
;@----------------------------------------------------------------------------
_D7:	;@ SMB5 $nn
;@----------------------------------------------------------------------------
	opSMB 5
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_D7:	;@ DCP $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opDCP 6
#endif
;@----------------------------------------------------------------------------
_D8:	;@ CLD
;@----------------------------------------------------------------------------
	getNextOpcode
	bic cycles,cycles,#CYC_D
	executeOpcode 2
;@----------------------------------------------------------------------------
_D9:	;@ CMP $nnnn,Y
;@----------------------------------------------------------------------------
	readMemAIY
	opCOMP m6502a 4

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_DA:	;@ PHX
;@----------------------------------------------------------------------------
	mov r0,m6502x,lsr#24
	push8 r0
	fetch 3
#endif
#if defined(W65C02)
;@----------------------------------------------------------------------------
_DB:	;@ STP
;@----------------------------------------------------------------------------
	opKIL
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_DB:	;@ DCP $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY_W
	opDCP 7
#endif

;@----------------------------------------------------------------------------
_DD:	;@ CMP $nnnn,X
;@----------------------------------------------------------------------------
	readMemAIX
	opCOMP m6502a 4
;@----------------------------------------------------------------------------
_DE:	;@ DEC $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opDEC 7
#if defined(W65C02)
;@----------------------------------------------------------------------------
_DF:	;@ BBS5 $nn,*
;@----------------------------------------------------------------------------
	opBBS 5
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_DF:	;@ DCP $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opDCP 7
#endif
;@----------------------------------------------------------------------------
_E0:	;@ CPX #$nn
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opCOMP m6502x 2
;@----------------------------------------------------------------------------
_E1:	;@ SBC ($nn,X)
;@----------------------------------------------------------------------------
	readMemIIX
	opSBC 6
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_E3:	;@ ISB ($nn),X
;@----------------------------------------------------------------------------
	doIIX
	opISB 8
#endif
;@----------------------------------------------------------------------------
_E4:	;@ CPX $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opCOMP m6502x 3
;@----------------------------------------------------------------------------
_E5:	;@ SBC $nn
;@----------------------------------------------------------------------------
	doZ
	readMem
	opSBC 3
;@----------------------------------------------------------------------------
_E6:	;@ INC $nn
;@----------------------------------------------------------------------------
	doZ
	opINC 5

#if defined(W65C02)
;@----------------------------------------------------------------------------
_E7:	;@ SMB6 $nn
;@----------------------------------------------------------------------------
	opSMB 6
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_E7:	;@ ISB $nn
;@----------------------------------------------------------------------------
	doZ
	opISB 5
#endif
;@----------------------------------------------------------------------------
_E8:	;@ INX
;@----------------------------------------------------------------------------
	add m6502x,m6502x,#0x01000000
	getNextOpcode
	mov m6502nz,m6502x,asr#24
	executeOpcode 2
;@----------------------------------------------------------------------------
_E9:	;@ SBC #$nn
;@----------------------------------------------------------------------------
#if !defined(W65C02) && !defined(W65C02_OLD)
_EB:	;@ SBC #$nn
#endif
;@----------------------------------------------------------------------------
	doIMM
	readMem
	opSBC 2
;@----------------------------------------------------------------------------
#if !defined(W65C02) && !defined(W65C02_OLD)
_1C:
_3C:
_7C:
#endif
_5C:
_DC:
_FC:	;@ SKW
;@----------------------------------------------------------------------------
	readMemAIX
	fetch 4
;@----------------------------------------------------------------------------
#if !defined(W65C02) && !defined(W65C02_OLD)
_0C:	;@ SKW
#endif
;@----------------------------------------------------------------------------
	add m6502pc,m6502pc,#1
;@----------------------------------------------------------------------------
#if !defined(W65C02) && !defined(W65C02_OLD)
_14:
_74:
_34:
#endif
_54:
_D4:
_F4:	;@ SKB 4 cycles
;@----------------------------------------------------------------------------
	eatCycles 1
;@----------------------------------------------------------------------------
#if !defined(W65C02) && !defined(W65C02_OLD)
_04:
_64:	;@ SKB 3 cycles
#endif
_44:
;@----------------------------------------------------------------------------
	eatCycles 1
;@----------------------------------------------------------------------------
#if defined(W65C02) || defined(W65C02_OLD)
_02:
_22:
_42:
_62:
#else
_80:
_89:
#endif
_82:
_C2:
_E2:	;@ SKB 2 cycles
;@----------------------------------------------------------------------------
	add m6502pc,m6502pc,#1
;@----------------------------------------------------------------------------
#if !defined(W65C02) && !defined(W65C02_OLD)
_1A:
_3A:
_5A:
_7A:
_DA:
_FA:
#endif
	mov r11,r11
_EA:	;@ NOP
;@----------------------------------------------------------------------------
	fetch 2
;@----------------------------------------------------------------------------
_EC:	;@ CPX $nnnn
;@----------------------------------------------------------------------------
	readMemABS
	opCOMP m6502x 4
;@----------------------------------------------------------------------------
_ED:	;@ SBC $nnnn
;@----------------------------------------------------------------------------
	doABS
	readMem
	opSBC 4
;@----------------------------------------------------------------------------
_EE:	;@ INC $nnnn
;@----------------------------------------------------------------------------
	doABS
	opINC 6
#if defined(W65C02)
;@----------------------------------------------------------------------------
_EF:	;@ BBS6 $nn,*
;@----------------------------------------------------------------------------
	opBBS 6
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_EF:	;@ ISB $nnnn
;@----------------------------------------------------------------------------
	doABS
	opISB 6
#endif
;@----------------------------------------------------------------------------
_F0:	;@ BEQ *
;@----------------------------------------------------------------------------
	opBEQ
;@----------------------------------------------------------------------------
_F1:	;@ SBC ($nn),Y
;@----------------------------------------------------------------------------
	readMemIIY
	opSBC 5

#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_F2:	;@ SBC ($nn)
;@----------------------------------------------------------------------------
	readMemZInd
	opSBC 5
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_F3:	;@ ISB ($nn),Y
;@----------------------------------------------------------------------------
	doIIY_W
	opISB 8
#endif
;@----------------------------------------------------------------------------
_F5:	;@ SBC $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	readMem
	opSBC 4
;@----------------------------------------------------------------------------
_F6:	;@ INC $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opINC 6

#if defined(W65C02)
;@----------------------------------------------------------------------------
_F7:	;@ SMB7 $nn
;@----------------------------------------------------------------------------
	opSMB 7
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_F7:	;@ ISB $nn,X
;@----------------------------------------------------------------------------
	doZIXf
	opISB 6
#endif
;@----------------------------------------------------------------------------
_F8:	;@ SED
;@----------------------------------------------------------------------------
	getNextOpcode
	orr cycles,cycles,#CYC_D
	executeOpcode 2
;@----------------------------------------------------------------------------
_F9:	;@ SBC $nnnn,Y
;@----------------------------------------------------------------------------
	readMemAIY
	opSBC 4
#if defined(W65C02) || defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_FA:	;@ PLX
;@----------------------------------------------------------------------------
	pop8 m6502nz
	mov m6502x,m6502nz,lsl#24
	fetch 4
#endif
#if !defined(W65C02) && !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_FB:	;@ ISB $nnnn,Y
;@----------------------------------------------------------------------------
	doAIY_W
	opISB 7
#endif
;@----------------------------------------------------------------------------
_FD:	;@ SBC $nnnn,X
;@----------------------------------------------------------------------------
	readMemAIX
	opSBC 4
;@----------------------------------------------------------------------------
_FE:	;@ INC $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opINC 7
#if defined(W65C02)
;@----------------------------------------------------------------------------
_FF:	;@ BBS7 $nn,*
;@----------------------------------------------------------------------------
	opBBS 7
#elif !defined(W65C02_OLD)
;@----------------------------------------------------------------------------
_FF:	;@ ISB $nnnn,X
;@----------------------------------------------------------------------------
	doAIX_W
	opISB 7
#endif
;@----------------------------------------------------------------------------


;@----------------------------------------------------------------------------
memRead8ABS:				;@ Mem read ($0000-$FFFF)
;@----------------------------------------------------------------------------
	doAbs
;@----------------------------------------------------------------------------
memRead8:					;@ Mem read ($0000-$FFFF)
;@----------------------------------------------------------------------------
	add r0,m6502ptr,#m6502ReadTbl
	and r1,addy,#0xE000
	ldr pc,[r0,r1,lsr#11]		;@ In: addy,r0=val(bits 8-31=?)
;@----------------------------------------------------------------------------
memRead8IIX:				;@ Mem read ($0000-$FFFF)
;@----------------------------------------------------------------------------
	doIIX
	add r0,m6502ptr,#m6502ReadTbl
	and r1,addy,#0xE000
	ldr pc,[r0,r1,lsr#11]		;@ In: addy,r0=val(bits 8-31=?)
;@----------------------------------------------------------------------------
memRead8IIY:				;@ Mem read ($0000-$FFFF)
;@----------------------------------------------------------------------------
	doIIY
	add r0,m6502ptr,#m6502ReadTbl
	and r1,addy,#0xE000
	ldr pc,[r0,r1,lsr#11]		;@ In: addy,r0=val(bits 8-31=?)
;@----------------------------------------------------------------------------
memRead8ZInd:				;@ Mem read ($0000-$FFFF)
;@----------------------------------------------------------------------------
	doZPI
	add r0,m6502ptr,#m6502ReadTbl
	and r1,addy,#0xE000
	ldr pc,[r0,r1,lsr#11]		;@ In: addy,r0=val(bits 8-31=?)
;@----------------------------------------------------------------------------
memRead8AIY:				;@ Mem read ($0000-$FFFF)
;@----------------------------------------------------------------------------
	doAIY
	add r0,m6502ptr,#m6502ReadTbl
	and r1,addy,#0xE000
	ldr pc,[r0,r1,lsr#11]		;@ In: addy,r0=val(bits 8-31=?)
;@----------------------------------------------------------------------------
memRead8AIX:				;@ Mem read ($0000-$FFFF)
;@----------------------------------------------------------------------------
	doAIX
	add r0,m6502ptr,#m6502ReadTbl
	and r1,addy,#0xE000
	ldr pc,[r0,r1,lsr#11]		;@ In: addy,r0=val(bits 8-31=?)
;@----------------------------------------------------------------------------
;@memWrite8Abs:				;@ Mem write ($0000-$FFFF)
;@----------------------------------------------------------------------------
;@	doAbs
;@----------------------------------------------------------------------------
memWrite8:					;@ Mem write ($0000-$FFFF)
;@----------------------------------------------------------------------------
	add r2,m6502ptr,#m6502WriteTbl
	and r1,addy,#0xE000
	ldr pc,[r2,r1,lsr#11]		;@ In: addy,r0=val(bits 8-31=?)
;@----------------------------------------------------------------------------
reTranslate6502PCToOffset:		;@ In = m6502pc+bank, out = r0 bank offset
;@----------------------------------------------------------------------------
	loadLastBank r0
	sub m6502pc,m6502pc,r0
;@----------------------------------------------------------------------------
translate6502PCToOffset:	;@ In = m6502pc, out = r0 bank offset
;@----------------------------------------------------------------------------
	add r1,m6502ptr,#m6502MemTbl
	and r0,m6502pc,#0xE000
	ldr r0,[r1,r0,lsr#11]
	storeLastBank r0
	add m6502pc,m6502pc,r0
	bx lr						;@ Out: m6502pc.

;@----------------------------------------------------------------------------
m6502SetResetPin:			;@ Can only be set
;@----------------------------------------------------------------------------
	ldrb r0,[m6502ptr,#m6502IrqPending]
	orr r0,r0,#RESET_F
	strb r0,[m6502ptr,#m6502IrqPending]
	bx lr
;@----------------------------------------------------------------------------
m6502SetNMIPin:				;@ NMI is edge triggered
;@----------------------------------------------------------------------------
	cmp r0,#0
	movne r0,#NMI_F
	ldrb r1,[m6502ptr,#m6502NMIPin]
	strb r0,[m6502ptr,#m6502NMIPin]
	bics r1,r0,r1
	ldrbne r0,[m6502ptr,#m6502IrqPending]
	orrne r0,r0,r1
	strbne r0,[m6502ptr,#m6502IrqPending]
	bx lr
;@----------------------------------------------------------------------------
m6502SetIRQPin:
;@----------------------------------------------------------------------------
	cmp r0,#0
	ldrb r0,[m6502ptr,#m6502IrqPending]
	biceq r0,r0,#IRQ_F
	orrne r0,r0,#IRQ_F
	strb r0,[m6502ptr,#m6502IrqPending]
	bx lr
;@----------------------------------------------------------------------------
m6502DelayIrqCheck:				;@ Irq should be delayed by 1 instruction.
;@----------------------------------------------------------------------------
	orr cycles,cycles,#0xC0000000
	executeNext
;@----------------------------------------------------------------------------
m6502OutOfCycles:
	sub m6502pc,m6502pc,#1
	mov cycles,cycles,lsl#2		;@ Check for delayed irq check.
	movs cycles,cycles,asr#2
	bpl m6502CheckIrqs
	ldmfd sp!,{lr}
	bx lr
;@----------------------------------------------------------------------------
m6502RestoreAndRunXCycles:	;@ r0 = number of cycles to run
;@----------------------------------------------------------------------------
	add r1,m6502ptr,#m6502Regs
	ldmia r1,{m6502nz-m6502pc,m6502zpage}	;@ Restore M6502 state
;@----------------------------------------------------------------------------
m6502RunXCycles:			;@ r0 = number of cycles to run
;@----------------------------------------------------------------------------
	stmfd sp!,{lr}
addR0Cycles:
	add cycles,cycles,r0,lsl#CYC_SHIFT
;@----------------------------------------------------------------------------
m6502CheckIrqs:
	ldrb r1,[m6502ptr,#m6502IrqPending]
	and r0,cycles,#CYC_I		;@ CYC_I = IRQ_F = 4
	bics r0,r1,r0
	bne takeIRQ
m6502Go:
	fetch 0
;@ - - - - - - - - - - - - - - - - - - -
takeIRQ:
	and r1,r1,#IRQ_F			;@ Clear Reset and NMI pending
	strb r1,[m6502ptr,#m6502IrqPending]
//whichIrq:
#ifdef ARM9
	clz r0,r0
	rsb r0,r0,#0x1f
#else
	movs r0,r0,lsl#28
	movcs r0,#4					;@ Reset?
	bcs doNMI
	movmi r0,#3					;@ NMI?
	bmi doNMI
	mov r0,#2					;@ IRQ
doNMI:
#endif // ARM9
	adr r2,interruptVectors
	ldr r12,[r2,r0,lsl#2]
;@----------------------------------------------------------
irq6502:					;@ Needs irq vector in r12
;@----------------------------------------------------------
	loadLastBank r0
	sub r0,m6502pc,r0
	push16						;@ Save PC

	encodeP (R)					;@ Save P
irqContinue:
	push8 r0

	orr cycles,cycles,#CYC_I	;@ Disable IRQ
#if defined(W65C02) || defined(W65C02_OLD)
	bic cycles,cycles,#CYC_D	;@ and decimal mode?
#endif
	ldr r0,[m6502ptr,#m6502MemTbl+7*4]
	ldrh m6502pc,[r0,r12]
	encodePC					;@ Get IRQ vector

	fetch 7
;@----------------------------------------------------------------------------
doBRK:						;@ Moved here for alignment
;@----------------------------------------------------------------------------
	mov r11,r11					;@ No$GBA debug!
	add m6502pc,m6502pc,#2
	loadLastBank r0
	sub r0,m6502pc,r0
	push16						;@ Save PC

	encodeP (B+R)				;@ Save P
	ldr r12,interruptVectors+8	;@=IRQ_VECTOR
	b irqContinue

;@----------------------------------------------------------------------------
	.equ IRQ_VECTOR, 0xFFFE		;@ IRQ interrupt vector address
	.equ RES_VECTOR, 0xFFFC		;@ RESET interrupt vector address
	.equ NMI_VECTOR, 0xFFFA		;@ NMI interrupt vector address
;@----------------------------------------------------------------------------
interruptVectors:
;@----------------------------------------------------------------------------
	.long 0						;@ Dummy
	.long 0						;@ Dummy
	.long IRQ_VECTOR			;@ Normal IRQ vector
	.long NMI_VECTOR			;@ NMI IRQ vector
	.long RES_VECTOR			;@ Reset vector


#ifndef CPU_RP2A03
;@----------------------------------------------------------------------------
opADC_Dec:
;@----------------------------------------------------------------------------
	opADCD 5
;@----------------------------------------------------------------------------
opSBC_Dec:
;@----------------------------------------------------------------------------
	opSBCD 5
#endif

;@----------------------------------------------------------------------------
#ifdef GBA
	.section .ewram, "ax"		;@ For the GBA
#else
	.section .text				;@ For everything else
#endif
;@----------------------------------------------------------------------------
_xx:	;@ ???					Invalid opcode
;@----------------------------------------------------------------------------
#if defined(W65C02) || defined(W65C02_OLD)
_03:
_0B:
_13:
_1B:
_23:
_2B:
_33:
_3B:
_43:
_4B:
_53:
_5B:
_63:
_6B:
_73:
_7B:
_83:
_8B:
_93:
_9B:
_A3:
_AB:
_B3:
_BB:
_C3:
_D3:
_E3:
_EB:
_F3:
_FB:
#if defined(W65C02_OLD)
_07:
_0F:
_17:
_1F:
_27:
_2F:
_37:
_3F:
_47:
_4F:
_57:
_5F:
_67:
_6F:
_77:
_7F:
_87:
_8F:
_97:
_9F:
_A7:
_AF:
_B7:
_BF:
_C7:
_CB:
_CF:
_D7:
_DB:
_DF:
_E7:
_EF:
_F7:
_FF:
#endif
	mov r11,r11					;@ No$GBA debugg!
/*
 	Do some debugging!
 */
	fetch 1
#endif
;@----------------------------------------------------------------------------
m6502RunXCyclesC:	;@ r0 = number of cycles to run, r1 = m6502ptr
	.type m6502RunXCyclesC STT_FUNC
;@----------------------------------------------------------------------------
	stmfd sp!,{r4-r11,lr}
	mov m6502ptr,r1
	bl m6502RestoreAndRunXCycles
;@----------------------------------------------------------------------------
returnToC:
	add r0,m6502ptr,#m6502Regs
	stmia r0,{m6502nz-m6502pc}	;@ Save M6502 state
	ldmfd sp!,{r4-r11,lr}
	bx lr
;@----------------------------------------------------------------------------
m6502Init:				;@ In r0=m6502ptr.
	.type m6502Init STT_FUNC
;@----------------------------------------------------------------------------
	add r0,r0,#m6502Opz
	adr r1,m6502OpTable
	mov r2,#256*4
	b memcpy
;@----------------------------------------------------------------------------
m6502Reset:				;@ In r0=m6502ptr.
	.type m6502Reset STT_FUNC
;@----------------------------------------------------------------------------
	stmfd sp!,{r4-r11,lr}
	mov m6502ptr,r0

;@---cpu reset
	mov m6502nz,#0
	mov m6502a,#0
	mov m6502x,#0
	mov m6502y,#0
	mov m6502sp,#1				;@ 0x100
	ldr m6502zpage,[m6502ptr,#m6502MemTbl]
	mov cycles,#CYC_I			;@ V=0, D=0, C=0, I=1 disable IRQ.

	mov r0,#RESET_F				;@ Reset pin
	str r0,[m6502ptr,#m6502IrqPending]	;@ Irq pending reset

	add r0,m6502ptr,#m6502Regs
	stmia r0,{m6502nz-m6502pc,m6502zpage}
	ldmfd sp!,{r4-r11,lr}
	bx lr
;@----------------------------------------------------------------------------
m6502SaveState:			;@ In r0=destination, r1=m6502ptr. Out r0=state size.
	.type   m6502SaveState STT_FUNC
;@----------------------------------------------------------------------------
	stmfd sp!,{r4,m6502ptr,lr}

	sub r4,r0,#m6502Regs
	mov m6502ptr,r1

	add r1,m6502ptr,#m6502Regs
	mov r2,#m6502StateSize					;@ Right now 0x24
	bl memcpy

	;@ Convert copied PC to not offseted.
	ldr r0,[r4,#m6502RegPC]					;@ Offsetted m6502pc
	loadLastBank r2
	sub r0,r0,r2
	str r0,[r4,#m6502RegPC]					;@ Normal m6502pc

	ldmfd sp!,{r4,m6502ptr,lr}
	mov r0,#m6502StateSize					;@ Right now 0x24
	bx lr
;@----------------------------------------------------------------------------
m6502LoadState:			;@ In r0=m6502ptr, r1=source. Out r0=state size.
	.type   m6502LoadState STT_FUNC
;@----------------------------------------------------------------------------
	stmfd sp!,{m6502pc,m6502ptr,lr}

	mov m6502ptr,r0
	add r0,m6502ptr,#m6502Regs
	mov r2,#m6502StateSize	;@ Right now 0x24
	bl memcpy

	ldr r0,[m6502ptr,#m6502MemTbl]
	str r0,[m6502ptr,#m6502ZeroPage]
	ldr m6502pc,[m6502ptr,#m6502RegPC]	;@ Normal m6502pc
	encodePC
	str m6502pc,[m6502ptr,#m6502RegPC]	;@ Rewrite offseted m6502pc

	ldmfd sp!,{m6502pc,m6502ptr,lr}
;@----------------------------------------------------------------------------
m6502GetStateSize:		;@ Out r0=state size.
	.type   m6502GetStateSize STT_FUNC
;@----------------------------------------------------------------------------
	mov r0,#m6502StateSize				;@ Right now 0x24
	bx lr
;@----------------------------------------------------------------------------
m6502RestoreOpcode:		;@ In r0=m6502ptr, r1=opcode
	.type   m6502RestoreOpcode STT_FUNC
;@----------------------------------------------------------------------------
	adr r3,m6502OpTable
	ldr r2,[r3,r1,lsl#2]
;@----------------------------------------------------------------------------
m6502PatchOpcode:		;@ In r0=m6502ptr, r1=opcode, r2=function.
	.type   m6502PatchOpcode STT_FUNC
;@----------------------------------------------------------------------------
	str r2,[r0,r1,lsl#2]
	bx lr
;@----------------------------------------------------------------------------
m6502OpTable:
	.long _00,_01,_02,_03,_04,_05,_06,_07,_08,_09,_0A,_0B,_0C,_0D,_0E,_0F
	.long _10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_1A,_1B,_1C,_1D,_1E,_1F
	.long _20,_21,_22,_23,_24,_25,_26,_27,_28,_29,_2A,_2B,_2C,_2D,_2E,_2F
	.long _30,_31,_32,_33,_34,_35,_36,_37,_38,_39,_3A,_3B,_3C,_3D,_3E,_3F
	.long _40,_41,_42,_43,_44,_45,_46,_47,_48,_49,_4A,_4B,_4C,_4D,_4E,_4F
	.long _50,_51,_52,_53,_54,_55,_56,_57,_58,_59,_5A,_5B,_5C,_5D,_5E,_5F
	.long _60,_61,_62,_63,_64,_65,_66,_67,_68,_69,_6A,_6B,_6C,_6D,_6E,_6F
	.long _70,_71,_72,_73,_74,_75,_76,_77,_78,_79,_7A,_7B,_7C,_7D,_7E,_7F
	.long _80,_81,_82,_83,_84,_85,_86,_87,_88,_89,_8A,_8B,_8C,_8D,_8E,_8F
	.long _90,_91,_92,_93,_94,_95,_96,_97,_98,_99,_9A,_9B,_9C,_9D,_9E,_9F
	.long _A0,_A1,_A2,_A3,_A4,_A5,_A6,_A7,_A8,_A9,_AA,_AB,_AC,_AD,_AE,_AF
	.long _B0,_B1,_B2,_B3,_B4,_B5,_B6,_B7,_B8,_B9,_BA,_BB,_BC,_BD,_BE,_BF
	.long _C0,_C1,_C2,_C3,_C4,_C5,_C6,_C7,_C8,_C9,_CA,_CB,_CC,_CD,_CE,_CF
	.long _D0,_D1,_D2,_D3,_D4,_D5,_D6,_D7,_D8,_D9,_DA,_DB,_DC,_DD,_DE,_DF
	.long _E0,_E1,_E2,_E3,_E4,_E5,_E6,_E7,_E8,_E9,_EA,_EB,_EC,_ED,_EE,_EF
	.long _F0,_F1,_F2,_F3,_F4,_F5,_F6,_F7,_F8,_F9,_FA,_FB,_FC,_FD,_FE,_FF
;@----------------------------------------------------------------------------
	.end
#endif // #ifdef __arm__
